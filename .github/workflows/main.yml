name: Checkout Code Example

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-west-1
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Check if code is checked out or not
      - name: List files
        run: ls -al

      # Setup Docker Build
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      # Build Docker image with multi-stage build
      - name: Build Docker image
        run: |
          docker build --file Dockerfile --tag my-app-image:latest . 

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Log in to Amazon Public ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1    

      # 3. Push image to ECR
      - name: Push Docker image to ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          ECR_REPOSITORY: ${{ secrets.ECR_URL }}  
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOS: ${{secrets.ECR_REPOS }}
        run: |
          # Log in to Amazon ECR
           # Login to Amazon ECR
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
      

          # Tag the Docker image
          docker tag my-app-image:latest  551364857603.dkr.ecr.us-west-1.amazonaws.com/ishitadocker/github-action:latest

          # Push the Docker image to ECR
          docker push 551364857603.dkr.ecr.us-west-1.amazonaws.com/ishitadocker/github-action:latest   
